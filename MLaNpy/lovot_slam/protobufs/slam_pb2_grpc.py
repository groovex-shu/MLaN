# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import slam_pb2 as slam__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in slam_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SlamStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.PushBag = channel.stream_unary(
                '/lovot_spike_svcs.slam.Slam/PushBag',
                request_serializer=slam__pb2.PushBagRequest.SerializeToString,
                response_deserializer=slam__pb2.PushBagResponse.FromString,
                _registered_method=True)
        self.ListMap = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/ListMap',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=slam__pb2.ListMapResponse.FromString,
                _registered_method=True)
        self.PullMap = channel.unary_stream(
                '/lovot_spike_svcs.slam.Slam/PullMap',
                request_serializer=slam__pb2.PullMapRequest.SerializeToString,
                response_deserializer=slam__pb2.PullMapResponse.FromString,
                _registered_method=True)
        self.GetStatus = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetStatus',
                request_serializer=slam__pb2.GetStatusRequest.SerializeToString,
                response_deserializer=slam__pb2.GetStatusResponse.FromString,
                _registered_method=True)
        self.BuildSingleMissionMap = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/BuildSingleMissionMap',
                request_serializer=slam__pb2.BuildSingleMissionMapRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetExplorationArea = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetExplorationArea',
                request_serializer=slam__pb2.GetExplorationAreaRequest.SerializeToString,
                response_deserializer=slam__pb2.GetExplorationAreaResponse.FromString,
                _registered_method=True)
        self.GetFrontier = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetFrontier',
                request_serializer=slam__pb2.GetFrontierRequest.SerializeToString,
                response_deserializer=slam__pb2.GetFrontierResponse.FromString,
                _registered_method=True)
        self.GetLatestMap = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetLatestMap',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=slam__pb2.GetLatestMapResponse.FromString,
                _registered_method=True)
        self.GetMergedProhibitedArea = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetMergedProhibitedArea',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=slam__pb2.GetMergedProhibitedAreaResponse.FromString,
                _registered_method=True)
        self.CheckExploreRights = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/CheckExploreRights',
                request_serializer=slam__pb2.CheckExploreRightsRequest.SerializeToString,
                response_deserializer=slam__pb2.CheckExploreRightsResponse.FromString,
                _registered_method=True)
        self.GetSpots = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetSpots',
                request_serializer=slam__pb2.GetSpotsRequest.SerializeToString,
                response_deserializer=slam__pb2.GetSpotsResponse.FromString,
                _registered_method=True)
        self.SetSpots = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/SetSpots',
                request_serializer=slam__pb2.SetSpotsRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetUnwelcomedArea = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/GetUnwelcomedArea',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=slam__pb2.GetUnwelcomedAreaResponse.FromString,
                _registered_method=True)
        self.PushLocalizationAccuracy = channel.unary_unary(
                '/lovot_spike_svcs.slam.Slam/PushLocalizationAccuracy',
                request_serializer=slam__pb2.PushLocalizationAccuracyRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UploadFile = channel.stream_unary(
                '/lovot_spike_svcs.slam.Slam/UploadFile',
                request_serializer=slam__pb2.UploadFileRequest.SerializeToString,
                response_deserializer=slam__pb2.UploadFileResponse.FromString,
                _registered_method=True)
        self.DownloadFile = channel.unary_stream(
                '/lovot_spike_svcs.slam.Slam/DownloadFile',
                request_serializer=slam__pb2.DownloadFileRequest.SerializeToString,
                response_deserializer=slam__pb2.DownloadFileResponse.FromString,
                _registered_method=True)


class SlamServicer(object):
    """Missing associated documentation comment in .proto file."""

    def PushBag(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PullMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BuildSingleMissionMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetExplorationArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrontier(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestMap(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMergedProhibitedArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckExploreRights(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSpots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetSpots(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUnwelcomedArea(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushLocalizationAccuracy(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SlamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'PushBag': grpc.stream_unary_rpc_method_handler(
                    servicer.PushBag,
                    request_deserializer=slam__pb2.PushBagRequest.FromString,
                    response_serializer=slam__pb2.PushBagResponse.SerializeToString,
            ),
            'ListMap': grpc.unary_unary_rpc_method_handler(
                    servicer.ListMap,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=slam__pb2.ListMapResponse.SerializeToString,
            ),
            'PullMap': grpc.unary_stream_rpc_method_handler(
                    servicer.PullMap,
                    request_deserializer=slam__pb2.PullMapRequest.FromString,
                    response_serializer=slam__pb2.PullMapResponse.SerializeToString,
            ),
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=slam__pb2.GetStatusRequest.FromString,
                    response_serializer=slam__pb2.GetStatusResponse.SerializeToString,
            ),
            'BuildSingleMissionMap': grpc.unary_unary_rpc_method_handler(
                    servicer.BuildSingleMissionMap,
                    request_deserializer=slam__pb2.BuildSingleMissionMapRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetExplorationArea': grpc.unary_unary_rpc_method_handler(
                    servicer.GetExplorationArea,
                    request_deserializer=slam__pb2.GetExplorationAreaRequest.FromString,
                    response_serializer=slam__pb2.GetExplorationAreaResponse.SerializeToString,
            ),
            'GetFrontier': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrontier,
                    request_deserializer=slam__pb2.GetFrontierRequest.FromString,
                    response_serializer=slam__pb2.GetFrontierResponse.SerializeToString,
            ),
            'GetLatestMap': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestMap,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=slam__pb2.GetLatestMapResponse.SerializeToString,
            ),
            'GetMergedProhibitedArea': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMergedProhibitedArea,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=slam__pb2.GetMergedProhibitedAreaResponse.SerializeToString,
            ),
            'CheckExploreRights': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckExploreRights,
                    request_deserializer=slam__pb2.CheckExploreRightsRequest.FromString,
                    response_serializer=slam__pb2.CheckExploreRightsResponse.SerializeToString,
            ),
            'GetSpots': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSpots,
                    request_deserializer=slam__pb2.GetSpotsRequest.FromString,
                    response_serializer=slam__pb2.GetSpotsResponse.SerializeToString,
            ),
            'SetSpots': grpc.unary_unary_rpc_method_handler(
                    servicer.SetSpots,
                    request_deserializer=slam__pb2.SetSpotsRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetUnwelcomedArea': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUnwelcomedArea,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=slam__pb2.GetUnwelcomedAreaResponse.SerializeToString,
            ),
            'PushLocalizationAccuracy': grpc.unary_unary_rpc_method_handler(
                    servicer.PushLocalizationAccuracy,
                    request_deserializer=slam__pb2.PushLocalizationAccuracyRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UploadFile': grpc.stream_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=slam__pb2.UploadFileRequest.FromString,
                    response_serializer=slam__pb2.UploadFileResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=slam__pb2.DownloadFileRequest.FromString,
                    response_serializer=slam__pb2.DownloadFileResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'lovot_spike_svcs.slam.Slam', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('lovot_spike_svcs.slam.Slam', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Slam(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def PushBag(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/lovot_spike_svcs.slam.Slam/PushBag',
            slam__pb2.PushBagRequest.SerializeToString,
            slam__pb2.PushBagResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/ListMap',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            slam__pb2.ListMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PullMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/PullMap',
            slam__pb2.PullMapRequest.SerializeToString,
            slam__pb2.PullMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetStatus',
            slam__pb2.GetStatusRequest.SerializeToString,
            slam__pb2.GetStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def BuildSingleMissionMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/BuildSingleMissionMap',
            slam__pb2.BuildSingleMissionMapRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetExplorationArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetExplorationArea',
            slam__pb2.GetExplorationAreaRequest.SerializeToString,
            slam__pb2.GetExplorationAreaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFrontier(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetFrontier',
            slam__pb2.GetFrontierRequest.SerializeToString,
            slam__pb2.GetFrontierResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestMap(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetLatestMap',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            slam__pb2.GetLatestMapResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetMergedProhibitedArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetMergedProhibitedArea',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            slam__pb2.GetMergedProhibitedAreaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckExploreRights(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/CheckExploreRights',
            slam__pb2.CheckExploreRightsRequest.SerializeToString,
            slam__pb2.CheckExploreRightsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSpots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetSpots',
            slam__pb2.GetSpotsRequest.SerializeToString,
            slam__pb2.GetSpotsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetSpots(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/SetSpots',
            slam__pb2.SetSpotsRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUnwelcomedArea(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/GetUnwelcomedArea',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            slam__pb2.GetUnwelcomedAreaResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PushLocalizationAccuracy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/PushLocalizationAccuracy',
            slam__pb2.PushLocalizationAccuracyRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadFile(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(
            request_iterator,
            target,
            '/lovot_spike_svcs.slam.Slam/UploadFile',
            slam__pb2.UploadFileRequest.SerializeToString,
            slam__pb2.UploadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/lovot_spike_svcs.slam.Slam/DownloadFile',
            slam__pb2.DownloadFileRequest.SerializeToString,
            slam__pb2.DownloadFileResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
